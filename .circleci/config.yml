version: 2.1

orbs:
  ruby: circleci/ruby@1.8.0
  node: circleci/node@5.0.2
  browser-tools: circleci/browser-tools@1.4.0

jobs:
  build:
    docker:
      - image: cimg/ruby:2.7.6-browsers
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
    steps:
      # git cloneする
      - checkout
      # gemをbundle installする
      - ruby/install-deps
      # npmパッケージをyarn installする
      - node/install-packages:
          pkg-manager: yarn

  lint:
    docker:
      - image: cimg/ruby:2.7.6-browsers
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
      # RuboCop
      - ruby/rubocop-check
      # ESLint
      - run:
          name: ESLint
          command: |
            mkdir -p /tmp/test-reports/eslint
            ./node_modules/.bin/eslint app/javascript --format junit --output-file /tmp/test-reports/eslint/results.xml
      # 静的解析結果をCIに読み込ませる
      - store_test_results:
          path: /tmp/test-reports

  test:
    parallelism: 3
    docker:
      - image: cimg/ruby:2.7.6-browsers
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
      - image: cimg/postgres:14.4
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_USER: beginners_db_app
          POSTGRES_DB: beginners_db_app_test
          POSTGRES_PASSWORD: beginners_db_app
    # Ruby/Rails 固有の環境変数をプライマリコンテナに適用する
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: beginners_db_app
      PGPASSWORD: beginners_db_app
      RAILS_ENV: test
    steps:
      # google-chromeをインストールする
      - browser-tools/install-chrome
      # chromedriverをインストールする
      - browser-tools/install-chromedriver
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: データベースの待機
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: データベースのセットアップ
          command: bundle exec rails db:schema:load --trace
      # RSpecを並列実行する
      - ruby/rspec-test

  # deploy:
  #   docker:
  #     - image: cimg/ruby:2.7.6-browsers
  #       auth:
  #         username: mydockerhub-user
  #         password: $DOCKERHUB_PASSWORD
  #   steps:
  #     # 本番環境にSSH接続する
  #     - add_ssh_keys:
  #         fingerprints:
  #           - xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx
  #     - run:
  #         name: 本番環境にデプロイ
  #         command: ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "/srv/beginners_db_app/deploy.sh"

# ワークフローを使って上記で宣言したジョブをオーケストレーションする
workflows:
  version: 2
  build_lint_test_deploy:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build
      # - deploy:
      #     requires:
      #       - lint
      #       - test
      #     filters:
      #       branches:
      #         only: master
